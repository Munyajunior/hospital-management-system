"""patients

Revision ID: bc0b9a15f8e4
Revises: 
Create Date: 2025-03-27 18:27:06.886096

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bc0b9a15f8e4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category', sa.Enum('OUTPATIENT', 'INPATIENT', 'ICU', name='department_category'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_departments_id'), 'departments', ['id'], unique=False)
    op.create_table('drug_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_drug_categories_id'), 'drug_categories', ['id'], unique=False)
    op.create_table('inventory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('added_by', sa.Integer(), nullable=False),
    sa.Column('drug_name', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['added_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['drug_categories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('drug_name')
    )
    op.create_index(op.f('ix_inventory_id'), 'inventory', ['id'], unique=False)
    op.create_table('patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('date_of_birth', sa.DateTime(timezone=True), nullable=False),
    sa.Column('gender', sa.Enum('Male', 'Female', 'Other', name='gender_enum'), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('contact_number', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('category', sa.Enum('outpatient', 'inpatient', 'ICU', name='patient_category'), nullable=False),
    sa.Column('emergency', sa.Boolean(), nullable=True),
    sa.Column('assigned_doctor_id', sa.Integer(), nullable=True),
    sa.Column('registered_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['assigned_doctor_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['registered_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_patients_id'), 'patients', ['id'], unique=False)
    op.create_table('wards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_wards_id'), 'wards', ['id'], unique=False)
    op.create_table('appointments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('patient_name', sa.String(), nullable=False),
    sa.Column('datetime', sa.DateTime(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'COMPLETED', 'CANCELED', 'RESCHEDULED', name='appointment_status'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appointments_id'), 'appointments', ['id'], unique=False)
    op.create_table('beds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bed_number', sa.String(), nullable=False),
    sa.Column('ward_id', sa.Integer(), nullable=False),
    sa.Column('is_occupied', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['ward_id'], ['wards.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_beds_id'), 'beds', ['id'], unique=False)
    op.create_table('lab_tests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('requested_by', sa.Integer(), nullable=False),
    sa.Column('test_type', sa.String(), nullable=False),
    sa.Column('additional_notes', sa.String(), nullable=True),
    sa.Column('results', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', name='labteststatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('completed_date', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['requested_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lab_tests_id'), 'lab_tests', ['id'], unique=False)
    op.create_table('medical_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('visit_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('diagnosis', sa.Text(), nullable=True),
    sa.Column('treatment_plan', sa.Text(), nullable=True),
    sa.Column('medical_history', sa.Text(), nullable=True),
    sa.Column('prescription', sa.Text(), nullable=True),
    sa.Column('lab_tests_requested', sa.Text(), nullable=True),
    sa.Column('scans_requested', sa.Text(), nullable=True),
    sa.Column('lab_tests_results', sa.Text(), nullable=True),
    sa.Column('scan_results', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_medical_records_id'), 'medical_records', ['id'], unique=False)
    op.create_table('patient_vitals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('blood_pressure', sa.Float(), nullable=True),
    sa.Column('heart_rate', sa.Float(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('recorded_by', sa.Integer(), nullable=False),
    sa.Column('recorded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['recorded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_patient_vitals_id'), 'patient_vitals', ['id'], unique=False)
    op.create_table('prescriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('prescribed_by', sa.Integer(), nullable=False),
    sa.Column('drug_name', sa.String(), nullable=False),
    sa.Column('dosage', sa.String(), nullable=False),
    sa.Column('instructions', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'DISPENSED', name='prescription_status'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('dispensed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['drug_name'], ['inventory.drug_name'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['prescribed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_prescriptions_id'), 'prescriptions', ['id'], unique=False)
    op.create_table('radiology_scans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('requested_by', sa.Integer(), nullable=False),
    sa.Column('scan_type', sa.String(), nullable=False),
    sa.Column('additional_notes', sa.String(), nullable=True),
    sa.Column('results', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', name='radiology_scan_status'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_date', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['requested_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_radiology_scans_id'), 'radiology_scans', ['id'], unique=False)
    op.create_table('patient_admissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('admitted_by', sa.Integer(), nullable=False),
    sa.Column('assigned_doctor_id', sa.Integer(), nullable=True),
    sa.Column('category', sa.Enum('OUTPATIENT', 'INPATIENT', 'ICU', name='admission_category'), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('ward_id', sa.Integer(), nullable=True),
    sa.Column('bed_id', sa.Integer(), nullable=True),
    sa.Column('admission_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('discharge_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('ADMITTED', 'STABLE', 'CRITICAL', 'DISCHARGED', name='admission_status'), nullable=True),
    sa.ForeignKeyConstraint(['admitted_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['assigned_doctor_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['bed_id'], ['beds.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ward_id'], ['wards.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_patient_admissions_id'), 'patient_admissions', ['id'], unique=False)
    op.create_table('icu_patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('admission_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('Stable', 'Critical', 'Improving', 'Deteriorating', name='icu_status'), nullable=True),
    sa.Column('condition_evolution', sa.Text(), nullable=True),
    sa.Column('medications', sa.Text(), nullable=True),
    sa.Column('drips', sa.Text(), nullable=True),
    sa.Column('treatment_plan', sa.Text(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['admission_id'], ['patient_admissions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_icu_patients_id'), 'icu_patients', ['id'], unique=False)
    op.create_table('inpatients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('admission_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('Stable', 'Recovering', 'Discharged', name='inpatient_status'), nullable=True),
    sa.Column('condition_evolution', sa.Text(), nullable=True),
    sa.Column('medications', sa.Text(), nullable=True),
    sa.Column('treatment_plan', sa.Text(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['admission_id'], ['patient_admissions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inpatients_id'), 'inpatients', ['id'], unique=False)
    op.create_unique_constraint(None, 'doctors', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'doctors', type_='unique')
    op.drop_index(op.f('ix_inpatients_id'), table_name='inpatients')
    op.drop_table('inpatients')
    op.drop_index(op.f('ix_icu_patients_id'), table_name='icu_patients')
    op.drop_table('icu_patients')
    op.drop_index(op.f('ix_patient_admissions_id'), table_name='patient_admissions')
    op.drop_table('patient_admissions')
    op.drop_index(op.f('ix_radiology_scans_id'), table_name='radiology_scans')
    op.drop_table('radiology_scans')
    op.drop_index(op.f('ix_prescriptions_id'), table_name='prescriptions')
    op.drop_table('prescriptions')
    op.drop_index(op.f('ix_patient_vitals_id'), table_name='patient_vitals')
    op.drop_table('patient_vitals')
    op.drop_index(op.f('ix_medical_records_id'), table_name='medical_records')
    op.drop_table('medical_records')
    op.drop_index(op.f('ix_lab_tests_id'), table_name='lab_tests')
    op.drop_table('lab_tests')
    op.drop_index(op.f('ix_beds_id'), table_name='beds')
    op.drop_table('beds')
    op.drop_index(op.f('ix_appointments_id'), table_name='appointments')
    op.drop_table('appointments')
    op.drop_index(op.f('ix_wards_id'), table_name='wards')
    op.drop_table('wards')
    op.drop_index(op.f('ix_patients_id'), table_name='patients')
    op.drop_table('patients')
    op.drop_index(op.f('ix_inventory_id'), table_name='inventory')
    op.drop_table('inventory')
    op.drop_index(op.f('ix_drug_categories_id'), table_name='drug_categories')
    op.drop_table('drug_categories')
    op.drop_index(op.f('ix_departments_id'), table_name='departments')
    op.drop_table('departments')
    # ### end Alembic commands ###
