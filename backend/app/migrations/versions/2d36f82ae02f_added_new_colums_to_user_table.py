"""Added new colums to user table

Revision ID: 2d36f82ae02f
Revises: 0000b53f81b8
Create Date: 2025-04-05 12:27:13.632343

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2d36f82ae02f'
down_revision: Union[str, None] = '0000b53f81b8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_medical_history_id', table_name='medical_history')
    op.drop_table('medical_history')
    op.drop_index('ix_family_history_id', table_name='family_history')
    op.drop_table('family_history')
    op.drop_index('ix_allergies_id', table_name='allergies')
    op.drop_table('allergies')
    op.add_column('users', sa.Column('settings', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('security_questions', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'security_questions')
    op.drop_column('users', 'settings')
    op.create_table('allergies',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('patient_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('severity', postgresql.ENUM('MILD', 'MODERATE', 'SEVERE', name='allergyseverity'), autoincrement=False, nullable=True),
    sa.Column('reaction', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name='allergies_patient_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='allergies_pkey')
    )
    op.create_index('ix_allergies_id', 'allergies', ['id'], unique=False)
    op.create_table('family_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('patient_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('relation', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('condition', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('age_at_diagnosis', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name='family_history_patient_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='family_history_pkey')
    )
    op.create_index('ix_family_history_id', 'family_history', ['id'], unique=False)
    op.create_table('medical_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('patient_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('condition', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('diagnosis_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('treatment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name='medical_history_patient_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='medical_history_pkey')
    )
    op.create_index('ix_medical_history_id', 'medical_history', ['id'], unique=False)
    # ### end Alembic commands ###
